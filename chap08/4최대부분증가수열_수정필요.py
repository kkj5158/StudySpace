import sys
sys.stdin=open("chap08/4.txt", "rt")

# 2, 7, 5, 8, 6, 4, 7, 12, 3

# 2 -> 1 2, 2 

# 3가지 값 저장 . 최대 길이. 선택된 최대값 . 선택된 최대값의 이전값 

# 2, 7 -> 2 , 2 , 7(선택된 최대값보다 크면은 + 1(선택 최대값을 업데이트 한다., 기존 최대값을 이전값으로 보낸다,), 최대값보다 작으면은 + 0)

# 2, 7, 5 -> 2 ,2 , 5 (선택된 최대값의 이전값보다는 크면서 선택된 최대값보다 작을경우 선택된 최대값을 그 값으로.  , 이전값은 그대로 유지. )

# 2, 7, 5, 8 -> 3 , 5, 8  

# 2, 7 , 5, 8 , 6 -> 3, 5 , 6  

# 2, 7 , 5, 8, 6 , 4 -> 3 , 5, 6 

# 2, 7 , 5 , 8 ,6 ,4 , 7 -> 4 , 7 
# 
#  12 -> 5, 7, 12
# 
#  3 -> 5, ,7 , 12  

# (이전 최대길이) + (확장이 가능하면) + 1 , (확장이 불가능하면 ) 0 

# 확장은 언제 가능한가

# 1 . (선택된)최대값보다 큰값이 들어온다. 
# 2. 

n = int(input())

nums = list(map(int,input().split()))

# 최대길이. 이전 선택 최대값. 선택최대값
dp = [[0, 1, 1] for _ in range(n)] 

for pos, val in enumerate(nums):
  if pos == 0:
    dp[pos][0] = 1
    dp[pos][1] = val
    dp[pos][2] = val
  else:
    if val > dp[pos-1][2]:
      dp[pos][0] = dp[pos-1][0] + 1
      dp[pos][1] = dp[pos][2]
      dp[pos][2] = val
    else:
      if val > dp[pos-1][1]:
         dp[pos][0] = dp[pos-1][0]
         dp[pos][1] = dp[pos-1][1]
         dp[pos][2] = val

print(dp[n-1][0])